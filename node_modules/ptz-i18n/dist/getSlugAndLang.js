'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ramda = require('ramda');

var defaultPagesPaths = ['/src/pages/'];

var getPagesPaths = function getPagesPaths(options) {
  return options && options.pagesPaths || defaultPagesPaths;
};

var getLangKeyDefault = function getLangKeyDefault(options) {
  return options && options.langKeyDefault || options;
};

var addSlashStart = function addSlashStart(fileName) {
  return (0, _ramda.startsWith)('/', fileName) ? fileName : '/' + fileName;
};

var addSlashEnd = function addSlashEnd(fileName) {
  return (0, _ramda.endsWith)('/', fileName) ? fileName : fileName + '/';
};

var addSlash = (0, _ramda.compose)(addSlashStart, addSlashEnd);

/**
 * Get slug (path) and langKey for a given file path.
 *
 * Used by gatsby-plugin-i18n and gatsby-plugin-i18n-tags
 *
 * @param {{langKeyDefault: string, pagesPaths: string[] }} options plugin options
 * @param {String} fileAbsolutePath local file absolute path
 * @return {{slug: string, langKey: string}} slug and langKey
 */
var getSlugAndLang = (0, _ramda.curry)(function (options, fileAbsolutePath) {
  var slugsAndLangs = getPagesPaths(options).map(function (pagesPath) {
    var filePath = ('safeStartToSplit-' + fileAbsolutePath).split(pagesPath)[1];

    if ((0, _ramda.isNil)(filePath)) {
      return null;
    }

    var fileName = filePath.split('.');
    var langKey = fileName.length === 3 ? fileName[1] : getLangKeyDefault(options);
    var slug = addSlash((fileName.length === 3 ? langKey : '') + addSlash(fileName[0].replace('index', '')));

    return {
      slug: slug,
      langKey: langKey
    };
  });

  return (0, _ramda.head)(slugsAndLangs.filter((0, _ramda.compose)(_ramda.not, _ramda.isNil)));
});

exports.default = getSlugAndLang;