{"version":3,"sources":["../../src/commands/develop.js"],"names":["url","require","glob","fs","openurl","chokidar","express","graphqlHTTP","graphqlPlayground","default","graphiqlExplorer","formatError","got","rl","webpack","webpackConfig","bootstrap","store","syncStaticDir","buildHTML","withBasePath","report","launchEditor","formatWebpackMessages","chalk","address","cors","telemetry","withResolverContext","sourceNodes","websocketManager","getSslCert","slash","initTracer","apiRunnerNode","db","detectPortInUseAndPrompt","onExit","queryUtil","queryQueue","queryWatcher","setTimeout","rlInterface","createInterface","input","process","stdin","output","stdout","on","exit","trackCli","startServer","program","directory","directoryPath","createIndexHtml","buildPages","stage","pagePaths","err","name","panic","stripIndent","startAutosave","startListening","createDevelopQueue","startWatchDeletePage","devConfig","port","compiler","app","use","expressMiddleware","log","path","heartbeat","graphqlEndpoint","env","GATSBY_GRAPHQL_IDE","get","endpoint","schema","getState","graphiql","context","stack","split","post","req","res","enableRefresh","ENABLE_GATSBY_REFRESH_ENDPOINT","refreshToken","GATSBY_REFRESH_TOKEN","authorizedRefresh","headers","authorization","console","end","query","fileName","lineNumber","index","logLevel","publicPath","stats","developMiddleware","config","proxy","prefix","proxiedUrl","originalUrl","host","method","pipe","stream","decompress","response","writeHead","statusCode","_","message","error","sendStatus","status","next","sendFile","server","Server","ssl","createServer","init","socket","getSocket","listener","listen","code","watchGlobs","map","watch","to","emit","module","exports","openTracingConfigFile","startBackgroundUpdate","parseInt","https","sitePackageJson","replace","certFile","keyFile","prepareUrls","protocol","formatUrl","hostname","format","pathname","prettyPrintUrl","bold","isUnspecifiedHost","lanUrlForConfig","lanUrlForTerminal","ip","test","undefined","_e","localUrlForTerminal","localUrlForBrowser","printInstructions","appName","urls","useYarn","cyan","printDeprecationWarnings","deprecatedApis","fixMap","boundActionCreators","newName","docsLink","pathContext","deprecatedLocations","forEach","api","sync","nodir","file","fileText","readFileSync","matchingApis","filter","indexOf","push","length","yellow","isFirstCompile","hooks","done","tapAsync","messages","toJson","isSuccessful","errors","open","Promise","resolve","catch"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst url = require(`url`)\nconst glob = require(`glob`)\nconst fs = require(`fs`)\nconst openurl = require(`better-opn`)\nconst chokidar = require(`chokidar`)\nconst express = require(`express`)\nconst graphqlHTTP = require(`express-graphql`)\nconst graphqlPlayground = require(`graphql-playground-middleware-express`)\n  .default\nconst graphiqlExplorer = require(`gatsby-graphiql-explorer`)\nconst { formatError } = require(`graphql`)\nconst got = require(`got`)\nconst rl = require(`readline`)\nconst webpack = require(`webpack`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst bootstrap = require(`../bootstrap`)\nconst { store } = require(`../redux`)\nconst { syncStaticDir } = require(`../utils/get-static-dir`)\nconst buildHTML = require(`./build-html`)\nconst { withBasePath } = require(`../utils/path`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst launchEditor = require(`react-dev-utils/launchEditor`)\nconst formatWebpackMessages = require(`react-dev-utils/formatWebpackMessages`)\nconst chalk = require(`chalk`)\nconst address = require(`address`)\nconst cors = require(`cors`)\nconst telemetry = require(`gatsby-telemetry`)\n\nconst withResolverContext = require(`../schema/context`)\nconst sourceNodes = require(`../utils/source-nodes`)\nconst websocketManager = require(`../utils/websocket-manager`)\nconst getSslCert = require(`../utils/get-ssl-cert`)\nconst slash = require(`slash`)\nconst { initTracer } = require(`../utils/tracer`)\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst db = require(`../db`)\nconst detectPortInUseAndPrompt = require(`../utils/detect-port-in-use-and-prompt`)\nconst onExit = require(`signal-exit`)\nconst queryUtil = require(`../query`)\nconst queryQueue = require(`../query/queue`)\nconst queryWatcher = require(`../query/query-watcher`)\n\n// const isInteractive = process.stdout.isTTY\n\n// Watch the static directory and copy files to public as they're added or\n// changed. Wait 10 seconds so copying doesn't interfere with the regular\n// bootstrap.\nsetTimeout(() => {\n  syncStaticDir()\n}, 10000)\n\nconst rlInterface = rl.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n})\n\n// Quit immediately on hearing ctrl-c\nrlInterface.on(`SIGINT`, () => {\n  process.exit()\n})\n\nonExit(() => {\n  telemetry.trackCli(`DEVELOP_STOP`)\n})\n\nasync function startServer(program) {\n  const directory = program.directory\n  const directoryPath = withBasePath(directory)\n  const createIndexHtml = async () => {\n    try {\n      await buildHTML.buildPages({\n        program,\n        stage: `develop-html`,\n        pagePaths: [`/`],\n      })\n    } catch (err) {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the html.js component for the development server.\n\n          See our docs page on debugging HTML builds for help https://gatsby.dev/debug-html\n        `,\n        err\n      )\n    }\n  }\n\n  // Start bootstrap process.\n  await bootstrap(program)\n\n  db.startAutosave()\n  queryUtil.startListening(queryQueue.createDevelopQueue())\n  queryWatcher.startWatchDeletePage()\n\n  await createIndexHtml()\n\n  const devConfig = await webpackConfig(\n    program,\n    directory,\n    `develop`,\n    program.port\n  )\n\n  const compiler = webpack(devConfig)\n\n  /**\n   * Set up the express app.\n   **/\n  const app = express()\n  app.use(telemetry.expressMiddleware(`DEVELOP`))\n  app.use(\n    require(`webpack-hot-middleware`)(compiler, {\n      log: false,\n      path: `/__webpack_hmr`,\n      heartbeat: 10 * 1000,\n    })\n  )\n\n  app.use(cors())\n\n  /**\n   * Pattern matching all endpoints with graphql or graphiql with 1 or more leading underscores\n   */\n  const graphqlEndpoint = `/_+graphi?ql`\n\n  if (process.env.GATSBY_GRAPHQL_IDE === `playground`) {\n    app.get(\n      graphqlEndpoint,\n      graphqlPlayground({\n        endpoint: `/___graphql`,\n      }),\n      () => {}\n    )\n  } else {\n    graphiqlExplorer(app, {\n      graphqlEndpoint,\n    })\n  }\n\n  app.use(\n    graphqlEndpoint,\n    graphqlHTTP(() => {\n      const schema = store.getState().schema\n      return {\n        schema,\n        graphiql: false,\n        context: withResolverContext({}, schema),\n        formatError(err) {\n          return {\n            ...formatError(err),\n            stack: err.stack ? err.stack.split(`\\n`) : [],\n          }\n        },\n      }\n    })\n  )\n\n  /**\n   * Refresh external data sources.\n   * This behavior is disabled by default, but the ENABLE_REFRESH_ENDPOINT env var enables it\n   * If no GATSBY_REFRESH_TOKEN env var is available, then no Authorization header is required\n   **/\n  app.post(`/__refresh`, (req, res) => {\n    const enableRefresh = process.env.ENABLE_GATSBY_REFRESH_ENDPOINT\n    const refreshToken = process.env.GATSBY_REFRESH_TOKEN\n    const authorizedRefresh =\n      !refreshToken || req.headers.authorization === refreshToken\n\n    if (enableRefresh && authorizedRefresh) {\n      console.log(`Refreshing source data`)\n      sourceNodes()\n    }\n    res.end()\n  })\n\n  app.get(`/__open-stack-frame-in-editor`, (req, res) => {\n    launchEditor(req.query.fileName, req.query.lineNumber)\n    res.end()\n  })\n\n  // Disable directory indexing i.e. serving index.html from a directory.\n  // This can lead to serving stale html files during development.\n  //\n  // We serve by default an empty index.html that sets up the dev environment.\n  app.use(require(`./develop-static`)(`public`, { index: false }))\n\n  app.use(\n    require(`webpack-dev-middleware`)(compiler, {\n      logLevel: `trace`,\n      publicPath: devConfig.output.publicPath,\n      stats: `errors-only`,\n    })\n  )\n\n  // Expose access to app for advanced use cases\n  const { developMiddleware } = store.getState().config\n\n  if (developMiddleware) {\n    developMiddleware(app)\n  }\n\n  // Set up API proxy.\n  const { proxy } = store.getState().config\n  if (proxy) {\n    const { prefix, url } = proxy\n    app.use(`${prefix}/*`, (req, res) => {\n      const proxiedUrl = url + req.originalUrl\n      const {\n        // remove `host` from copied headers\n        // eslint-disable-next-line no-unused-vars\n        headers: { host, ...headers },\n        method,\n      } = req\n      req\n        .pipe(\n          got\n            .stream(proxiedUrl, { headers, method, decompress: false })\n            .on(`response`, response =>\n              res.writeHead(response.statusCode, response.headers)\n            )\n            .on(`error`, (err, _, response) => {\n              if (response) {\n                res.writeHead(response.statusCode, response.headers)\n              } else {\n                const message = `Error when trying to proxy request \"${\n                  req.originalUrl\n                }\" to \"${proxiedUrl}\"`\n\n                report.error(message, err)\n                res.sendStatus(500)\n              }\n            })\n        )\n        .pipe(res)\n    })\n  }\n\n  await apiRunnerNode(`onCreateDevServer`, { app })\n\n  // In case nothing before handled hot-update - send 404.\n  // This fixes \"Unexpected token < in JSON at position 0\" runtime\n  // errors after restarting development server and\n  // cause automatic hard refresh in the browser.\n  app.use(/.*\\.hot-update\\.json$/i, (req, res) => {\n    res.status(404).end()\n  })\n\n  // Render an HTML page and serve it.\n  app.use((req, res, next) => {\n    res.sendFile(directoryPath(`public/index.html`), err => {\n      if (err) {\n        res.status(500).end()\n      }\n    })\n  })\n\n  /**\n   * Set up the HTTP server and socket.io.\n   **/\n  let server = require(`http`).Server(app)\n\n  // If a SSL cert exists in program, use it with `createServer`.\n  if (program.ssl) {\n    server = require(`https`).createServer(program.ssl, app)\n  }\n  websocketManager.init({ server, directory: program.directory })\n  const socket = websocketManager.getSocket()\n\n  const listener = server.listen(program.port, program.host, err => {\n    if (err) {\n      if (err.code === `EADDRINUSE`) {\n        // eslint-disable-next-line max-len\n        report.panic(\n          `Unable to start Gatsby on port ${\n            program.port\n          } as there's already a process listening on that port.`\n        )\n        return\n      }\n\n      report.panic(`There was a problem starting the development server`, err)\n    }\n  })\n\n  // Register watcher that rebuilds index.html every time html.js changes.\n  const watchGlobs = [`src/html.js`, `plugins/**/gatsby-ssr.js`].map(path =>\n    slash(directoryPath(path))\n  )\n\n  chokidar.watch(watchGlobs).on(`change`, async () => {\n    await createIndexHtml()\n    socket.to(`clients`).emit(`reload`)\n  })\n\n  return [compiler, listener]\n}\n\nmodule.exports = async (program: any) => {\n  initTracer(program.openTracingConfigFile)\n  telemetry.trackCli(`DEVELOP_START`)\n  telemetry.startBackgroundUpdate()\n\n  const port =\n    typeof program.port === `string` ? parseInt(program.port, 10) : program.port\n\n  // In order to enable custom ssl, --cert-file --key-file and -https flags must all be\n  // used together\n  if ((program[`cert-file`] || program[`key-file`]) && !program.https) {\n    report.panic(\n      `for custom ssl --https, --cert-file, and --key-file must be used together`\n    )\n  }\n\n  // Check if https is enabled, then create or get SSL cert.\n  // Certs are named after `name` inside the project's package.json.\n  // Scoped names are converted from @npm/package-name to npm--package-name\n  if (program.https) {\n    program.ssl = await getSslCert({\n      name: program.sitePackageJson.name.replace(`@`, ``).replace(`/`, `--`),\n      certFile: program[`cert-file`],\n      keyFile: program[`key-file`],\n      directory: program.directory,\n    })\n  }\n\n  program.port = await detectPortInUseAndPrompt(port, rlInterface)\n\n  const [compiler] = await startServer(program)\n\n  function prepareUrls(protocol, host, port) {\n    const formatUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port,\n        pathname: `/`,\n      })\n    const prettyPrintUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port: chalk.bold(port),\n        pathname: `/`,\n      })\n\n    const isUnspecifiedHost = host === `0.0.0.0` || host === `::`\n    let lanUrlForConfig, lanUrlForTerminal\n    if (isUnspecifiedHost) {\n      try {\n        // This can only return an IPv4 address\n        lanUrlForConfig = address.ip()\n        if (lanUrlForConfig) {\n          // Check if the address is a private ip\n          // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n          if (\n            /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n              lanUrlForConfig\n            )\n          ) {\n            // Address is private, format it for later use\n            lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig)\n          } else {\n            // Address is not private, so we will discard it\n            lanUrlForConfig = undefined\n          }\n        }\n      } catch (_e) {\n        // ignored\n      }\n    }\n    // TODO collect errors (GraphQL + Webpack) in Redux so we\n    // can clear terminal and print them out on every compile.\n    // Borrow pretty printing code from webpack plugin.\n    const localUrlForTerminal = prettyPrintUrl(host)\n    const localUrlForBrowser = formatUrl(host)\n    return {\n      lanUrlForConfig,\n      lanUrlForTerminal,\n      localUrlForTerminal,\n      localUrlForBrowser,\n    }\n  }\n\n  function printInstructions(appName, urls, useYarn) {\n    console.log()\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`)\n    console.log()\n\n    if (urls.lanUrlForTerminal) {\n      console.log(\n        `  ${chalk.bold(`Local:`)}            ${urls.localUrlForTerminal}`\n      )\n      console.log(\n        `  ${chalk.bold(`On Your Network:`)}  ${urls.lanUrlForTerminal}`\n      )\n    } else {\n      console.log(`  ${urls.localUrlForTerminal}`)\n    }\n\n    console.log()\n    console.log(\n      `View ${\n        process.env.GATSBY_GRAPHQL_IDE === `playground`\n          ? `the GraphQL Playground`\n          : `GraphiQL`\n      }, an in-browser IDE, to explore your site's data and schema`\n    )\n    console.log()\n    console.log(`  ${urls.localUrlForTerminal}___graphql`)\n\n    console.log()\n    console.log(`Note that the development build is not optimized.`)\n    console.log(\n      `To create a production build, use ` + `${chalk.cyan(`npm run build`)}`\n    )\n    console.log()\n  }\n\n  function printDeprecationWarnings() {\n    const deprecatedApis = [`boundActionCreators`, `pathContext`]\n    const fixMap = {\n      boundActionCreators: {\n        newName: `actions`,\n        docsLink: `https://gatsby.dev/boundActionCreators`,\n      },\n      pathContext: {\n        newName: `pageContext`,\n        docsLink: `https://gatsby.dev/pathContext`,\n      },\n    }\n    const deprecatedLocations = {}\n    deprecatedApis.forEach(api => (deprecatedLocations[api] = []))\n\n    glob\n      .sync(`{,!(node_modules|public)/**/}*.js`, { nodir: true })\n      .forEach(file => {\n        const fileText = fs.readFileSync(file)\n        const matchingApis = deprecatedApis.filter(\n          api => fileText.indexOf(api) !== -1\n        )\n        matchingApis.forEach(api => deprecatedLocations[api].push(file))\n      })\n\n    deprecatedApis.forEach(api => {\n      if (deprecatedLocations[api].length) {\n        console.log(\n          `%s %s %s %s`,\n          chalk.cyan(api),\n          chalk.yellow(`is deprecated. Please use`),\n          chalk.cyan(fixMap[api].newName),\n          chalk.yellow(\n            `instead. For migration instructions, see ${\n              fixMap[api].docsLink\n            }\\nCheck the following files:`\n          )\n        )\n        console.log()\n        deprecatedLocations[api].forEach(file => console.log(file))\n        console.log()\n      }\n    })\n  }\n\n  let isFirstCompile = true\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.hooks.done.tapAsync(`print getsby instructions`, (stats, done) => {\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    const messages = formatWebpackMessages(stats.toJson({}, true))\n    const urls = prepareUrls(\n      program.ssl ? `https` : `http`,\n      program.host,\n      program.port\n    )\n    const isSuccessful = !messages.errors.length\n    // if (isSuccessful) {\n    // console.log(chalk.green(`Compiled successfully!`))\n    // }\n    // if (isSuccessful && (isInteractive || isFirstCompile)) {\n    if (isSuccessful && isFirstCompile) {\n      printInstructions(program.sitePackageJson.name, urls, program.useYarn)\n      printDeprecationWarnings()\n      if (program.open) {\n        Promise.resolve(openurl(urls.localUrlForBrowser)).catch(err =>\n          console.log(\n            `${chalk.yellow(\n              `warn`\n            )} Browser not opened because no browser was found`\n          )\n        )\n      }\n    }\n\n    isFirstCompile = false\n\n    // If errors exist, only show errors.\n    // if (messages.errors.length) {\n    // // Only keep the first error. Others are often indicative\n    // // of the same problem, but confuse the reader with noise.\n    // if (messages.errors.length > 1) {\n    // messages.errors.length = 1\n    // }\n    // console.log(chalk.red(\"Failed to compile.\\n\"))\n    // console.log(messages.errors.join(\"\\n\\n\"))\n    // return\n    // }\n\n    // Show warnings if no errors were found.\n    // if (messages.warnings.length) {\n    // console.log(chalk.yellow(\"Compiled with warnings.\\n\"))\n    // console.log(messages.warnings.join(\"\\n\\n\"))\n\n    // // Teach some ESLint tricks.\n    // console.log(\n    // \"\\nSearch for the \" +\n    // chalk.underline(chalk.yellow(\"keywords\")) +\n    // \" to learn more about each warning.\"\n    // )\n    // console.log(\n    // \"To ignore, add \" +\n    // chalk.cyan(\"// eslint-disable-next-line\") +\n    // \" to the line before.\\n\"\n    // )\n    // }\n\n    done()\n  })\n}\n"],"file":"develop.js"}